ipv4 table internet_table_v4;
ipv6 table internet_table_v6;

define INTERNET_CUSTOMERS = (2526, 1);

protocol pipe {
  table internet_table_v4;
  peer table master4;
  import none;
  export filter {
    krt_prefsrc = INTERNET_SRC_v4;
    accept;
  };
}

protocol pipe {
  table internet_table_v6;
  peer table master6;
  import none;
  export filter {
    krt_prefsrc = INTERNET_SRC_v6;
    accept;
  };
}

template bgp internet_peers {
  graceful restart on;
  local as INTERNET_ASN;
  path metric 1;
  ipv4 {
    table internet_table_v4;
    import filter {
      utils_internet_reject_small_prefixes_v4();
      utils_reject_long_aspaths();
      utils_internet_reject_bogon();
      utils_internet_reject_transit_paths();
      utils_internet_roa();
      accept;
    };
    export filter {
      bgp_path.delete(CONFEDERATION);
      if source = RTS_STATIC ||
         INTERNET_CUSTOMERS ~ bgp_community then {
        bgp_community.delete(INTERNET_CUSTOMERS);
        accept;
      }
      reject;
    };
    import limit 1000 action block;
  };
  ipv6{
    table internet_table_v6;
    import filter {
      utils_internet_reject_small_prefixes_v6();
      utils_reject_long_aspaths();
      utils_internet_reject_bogon();
      utils_internet_reject_transit_paths();
      utils_internet_roa();
      accept;
    };
    export filter {
      bgp_path.delete(CONFEDERATION);
      if source = RTS_STATIC ||
         INTERNET_CUSTOMERS ~ bgp_community then {
        bgp_community.delete(INTERNET_CUSTOMERS);
        accept;
      }
      reject;
    };
    import limit 1000 action block;
  };
}

template bgp internet_transits {
  graceful restart on;
  local as INTERNET_ASN;
  path metric 1;
  ipv4 {
    table internet_table_v4;
    import filter {
      utils_internet_reject_small_prefixes_v4();
      utils_reject_long_aspaths();
      utils_internet_reject_bogon();
      utils_internet_reject_transit_paths();
      utils_internet_roa();
      accept;
    };
    export filter {
      bgp_path.delete(CONFEDERATION);
      if source = RTS_STATIC ||
         INTERNET_CUSTOMERS ~ bgp_community then {
        bgp_community.delete(INTERNET_CUSTOMERS);
        accept;
      }
      reject;
    };
    import limit 1000 action block;
  };
  ipv6{
    table internet_table_v6;
    import filter {
      utils_internet_reject_small_prefixes_v6();
      utils_reject_long_aspaths();
      utils_internet_reject_bogon();
      utils_internet_reject_transit_paths();
      utils_internet_roa();
      accept;
    };
    export filter {
      bgp_path.delete(CONFEDERATION);
      if source = RTS_STATIC ||
         INTERNET_CUSTOMERS ~ bgp_community then {
        bgp_community.delete(INTERNET_CUSTOMERS);
        accept;
      }
      reject;
    };
    import limit 1000 action block;
  };
}

template bgp internet_customers {
  graceful restart on;
  local as INTERNET_ASN;
  path metric 1;
  ipv4 {
    table internet_table_v4;
    import filter {
      utils_internet_reject_small_prefixes_v4();
      utils_reject_long_aspaths();
      utils_internet_reject_bogon();
      utils_internet_reject_transit_paths();
      utils_internet_roa();
      bgp_community.add(INTERNET_CUSTOMERS);
      accept;
    };
    export filter {
      bgp_path.delete(CONFEDERATION);
      accept;
    };
    import limit 1000 action block;
  };
  ipv6{
    table internet_table_v6;
    import filter {
      utils_internet_reject_small_prefixes_v6();
      utils_reject_long_aspaths();
      utils_internet_reject_bogon();
      utils_internet_reject_transit_paths();
      utils_internet_roa();
      bgp_community.add(INTERNET_CUSTOMERS);
      accept;
    };
    export filter {
      bgp_path.delete(CONFEDERATION);
      accept;
    };
    import limit 1000 action block;
  };
}

include "/bird/internet/peers/*.conf";
include "/bird/internet/transits/*.conf";
include "/bird/internet/customers/*.conf";
